# 11.1 进程的概念

进程：具有独立功能的程序，在一定数据集上面的动态执行。

进程包含了一个程序的所有状态信息。pcb

动态性、并发性、独立性、制约性。

# 11.2 进程控制块

控制信息的所有集合。

控制块内容：进程标识信息、处理机现场保护信息、进程控制信息(调度信息、通信信息、存储信息)。

pcb的组织形式：链表 索引表

# 11.3 进程状态

进程生命周期的划分：进程创建、执行、等待、抢占、唤醒、结束

以及各个状态的转换图

sleep()过程：首先是创建，需要创建进程所需要的资源(内存 相关数据结构)。完毕之后进入就绪状态，然后等待调度执行cpu，然后sleep中断，延时后再就绪。

进程的切换：系统中断、保护现场、切回来。

# 11.4 三状态进程模型

就绪、运行、等待。转换条件

# 11.5 挂起进程模型

进程挂起：和外存 虚拟内存相关。

分为两类：等待挂起(在外存中等待某种事情发生)和就绪挂起(只要外存进入内存 就可以运行)

用状态队列来维护各种状态。

# 11.6 线程的概念

为什么引入线程？：充分利用设备资源

进程中引入实体：实体之间并发、实体之间共享地址。

线程优点：多线程、并发、共享地址。缺点：一个崩溃、其他崩溃。

![image-20210626174646140](C:\Users\12092\AppData\Roaming\Typora\typora-user-images\image-20210626174646140.png)

# 11.7 用户线程

用户线程实现方式：POSIX Pthreads,Mach C-threads,Solaris threads(内核不了解，支持不是多线程的os)

在用户自己实现的时候，需要自定义tcb。

刚开始os中没有多线程，需要用户自己写。

# 11.8 内核线程

由内核来维护pcb tcb。